<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title></title>
    <url>%2F2019%2F06%2F03%2Fpython%E5%88%97%E8%A1%A8%E5%92%8C%E5%AD%97%E7%AC%A6%E4%B8%B2%2F</url>
    <content type="text"><![CDATA[字符串 .count返回某个字符出现的次数。 a ‘asdfghjklasdgha’a.count(“a”)3 .startswith判断字符串以什么开头，是返回True,否返回False a ‘asdfghjklasdgha’a.startswith(‘a’)Truea.startswith(‘b’)False .endswith判断字符串以什么结尾，是返回True,否返回False a ‘asdfghjklasdgha’a.endswith(‘a’)Truea.endswith(‘b’)False .find检测字符串中是否包含子字符串，如果指定 beg（开始） 和 end（结束） 范围，则检查是否包含在指定范围内，如果包含子字符串返回开始的索引值，否则返回-1。 a ‘asdfghjklasdgha’a.find(‘hjk’)5 a.find(‘hjk’,6)-1 .format字符串格式化 a ‘asdfghjklasdgha’‘test is {}’.format(a)‘test is asdfghjklasdgha’‘test is {} {}’.format(a,’test’)‘test is asdfghjklasdgha test’ .index检测字符串中是否包含子字符串，如果指定 beg（开始） 和 end（结束） 范围，则检查是否包含在指定范围内，如果包含子字符串返回开始的索引值，否则抛出异常。 a ‘asdfghjklasdgha’a.index(‘hjk’)5 a.index(‘hjk’,6)Traceback (most recent call last): File ““, line 1, in ValueError: substring not founda.index(‘ajk’)Traceback (most recent call last): File ““, line 1, in ValueError: substring not found .isdigit检测字符串是否只由数字组成。 a ‘asdfghjklasdgha’b ‘12345’a.isdigit()Falseb.isdigit()True .islower检测字符串是否由小写字母组成。 a ‘asdfghjklasdgha’b ‘Asdfghjklasdgha’a.islower()Trueb.islower()False .isupper检测字符串中所有的字母是否都为大写。 a ‘asdfghjklasdgha’b ‘Asdfghjklasdgha’c ‘ASDFGHJKLASDGHA’a.isupper()Falseb.isupper()Falsec.isupper()True .join将序列中的元素以指定的字符连接生成一个新的字符串 test = “-“d ‘abc’test.join(d)‘a-b-c’ .ljust返回一个原字符串左对齐,并使用空格填充至指定长度的新字符串。如果指定的长度小于原字符串的长度则返回原字符串。 a ‘asdfghjklasdgha’a.ljust(30)‘asdfghjklasdgha ‘a.ljust(30,”#”)‘asdfghjklasdgha###############’ .lower转换字符串中所有大写字符为小写。 c ‘ASDFGHJKLASDGHA’c.lower()‘asdfghjklasdgha’ .lstrip用于截掉字符串左边的空格或指定字符。 test‘ abc ‘test.lstrip()‘abc ‘test = “####abc####”test.lstrip(“#”)‘abc####’ .replace把字符串中的 old（旧字符串） 替换成 new(新字符串)，如果指定第三个参数max，则替换不超过 max 次。 a ‘asdfghjklasdgha’a.replace(“a”,”test”)‘testsdfghjkltestsdghtest’a.replace(“a”,”test”,2)‘testsdfghjkltestsdgha’ .rjust返回一个原字符串右对齐,并使用空格填充至长度 width 的新字符串。如果指定的长度小于字符串的长度则返回原字符串。 a ‘asdfghjklasdgha’a.rjust(30)‘ asdfghjklasdgha’a.rjust(30,”#”)‘###############asdfghjklasdgha’ .split通过指定分隔符对字符串进行切片，如果参数 num 有指定值，则分隔 num+1 个子字符串。 test‘abc bcd cde’test.split()[‘abc’, ‘bcd’, ‘cde’]test.split(“ “)[‘abc’, ‘bcd’, ‘cde’]test.split(“ “,1)[‘abc’, ‘bcd cde’] .strip用于移除字符串头尾指定的字符（默认为空格或换行符）或字符序列。注意：该方法只能删除开头或是结尾的字符，不能删除中间部分的字符。 test‘#########abc#############’test.strip(“#”)‘abc’ .upper将字符串中的小写字母转为大写字母。 a ‘asdfghjklasdgha’a.upper()‘ASDFGHJKLASDGHA’ 列表 .append在列表末尾添加新的对象。 a [‘abc’, ‘abc’, ‘bcd’, ‘test’]a.append(“123”)a [‘abc’, ‘abc’, ‘bcd’, ‘test’, ‘123’] .count返回字符串出现的次数 a [‘test’, ‘abc’, ‘abc’, ‘bcd’]a.count(‘abc’)2 .extend在列表末尾一次性追加另一个序列中的多个值。 a = [“abc”,”cde”]b = [“123”,567]a.extend(b)a [‘abc’, ‘cde’, ‘123’, 567] .index返回从左开始匹配到的第一个字符串的索引 a [‘test’, ‘abc’, ‘abc’, ‘bcd’]a.index(‘abc’)1 .insert用于将指定对象插入列表的指定位置。 a [‘abc’, ‘abc’]a.insert(1,”bcd”)a [‘abc’, ‘bcd’, ‘abc’] .pop移除列表中的一个元素（默认最后一个元素），并且返回该元素的值。 a [‘test’, ‘abc’, ‘abc’, ‘bcd’]a.pop()‘bcd’a [‘test’, ‘abc’, ‘abc’]a.pop(0)‘test’a [‘abc’, ‘abc’] .remove用于移除列表中某个值的第一个匹配项。 a [‘abc’, ‘bcd’, 567, ‘123’, ‘abc’]a.remove(“abc”)a [‘bcd’, 567, ‘123’, ‘abc’] .reverse用于反向列表中元素。 a [‘bcd’, 567, ‘123’, ‘abc’]a.reverse()a [‘abc’, ‘123’, 567, ‘bcd’] .sort对原列表进行排序 a [‘test’, ‘abc’, ‘abc’, ‘bcd’]a.sort()a [‘abc’, ‘abc’, ‘bcd’, ‘test’]]]></content>
  </entry>
</search>
